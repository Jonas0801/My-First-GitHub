using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.UI;

public class Question_Pic : MonoBehaviour
{
    public Text level;
    public GameObject victoryImage, correctImage, errorImage;
    public int btnValue;

    bool isBtn;
    int count;
    int rndNum;

    public GameObject[] QuesPic;
    [Range(1, 4)]
    public int[] ansRndValue;
    public int[] saveRndNum;

    private void Start()
    {
        correctImage.SetActive(false);
        errorImage.SetActive(false);
        victoryImage.SetActive(false);

        saveRndNum = new int[QuesPic.Length];

        level.text = "請按開始執行";

        foreach (var ques in QuesPic)
        {
            ques.SetActive(false);
        }
    }

    public void OnClickQues()
    {
        if (count == 0)
        {
            Rnd();
        }
        else
            print("Already Start!");
    }

    public void Rnd()
    {
    reStart:
        if (count < ansRndValue.Length)
        {
            rndNum = Random.Range(0, QuesPic.Length);
            saveRndNum[count] = rndNum;

            if (count > 0)
            {
                for (int i = 0; i < count; i++)
                {
                    if (saveRndNum[i] == rndNum)
                    {
                        print("重複");
                        goto reStart;
                    }
                }
            }
            QuesPic[rndNum].SetActive(true);
        } 
        count++;       

        level.text = "第" + count + "題";
    }

    public void OnCorrect()
    {
        if (QuesPic[rndNum].activeSelf == false) { print("沒有題目!"); return; }
        if (isBtn) { return; }
        if (ansRndValue[rndNum] == btnValue)
        {
            if (count == ansRndValue.Length)
            {
                count = 0;
                saveRndNum = new int[10];
                StartCoroutine(win());
                print("通關");
            }
            else
            {
                isBtn = true;
                print("答對");                
                StartCoroutine(correct());
            }
        }
        else
        {
            isBtn = true;
            StartCoroutine(error());
            print("錯誤");
        }            
    }

    IEnumerator error()
    {
        errorImage.SetActive(true);
        yield return new WaitForSeconds(1.5f);
        errorImage.SetActive(false);
        isBtn = false;
    }

    IEnumerator correct()
    {
        correctImage.SetActive(true);
        yield return new WaitForSeconds(1.5f);
        correctImage.SetActive(false);
        QuesPic[rndNum].SetActive(false);
        isBtn = false;
        Rnd();
    }

    IEnumerator win()
    {
        victoryImage.SetActive(true);
        yield return new WaitForSeconds(3f);
        victoryImage.SetActive(false);
        QuesPic[rndNum].SetActive(false);
        level.text = "請按開始執行";

    }

    public void A()
    {
        btnValue = 1;
        OnCorrect();
    }
    public void B()
    {
        btnValue = 2;
        OnCorrect();
    }
    public void C()
    {
        btnValue = 3;
        OnCorrect();
    }
    public void D()
    {
        btnValue = 4;
        OnCorrect();
    }
}
